#include <bits/stdc++.h>
using namespace std;
class Node
{
public:
    int data;
    Node *left;
    Node *right;

    Node(int data)
    {
        this->data = data;
        this->left = NULL;
        this->right = NULL;
    }
};

int maxPath(Node *&root, int &Max)
{
    if (root == NULL)
        return 0;
    int lh = max(0, maxPath(root->left, Max));
    int rh = max(0, maxPath(root->right, Max));
    Max = max(Max, (lh + rh + root->data));
    return root->data + max(lh, rh);
}
int maxPathSum(Node *root) // o(n)
{
    int Max = INT_MIN;
    maxPath(root, Max);
    return Max;
}

int main()
{
    Node *root = new Node(1);
    root->left = new Node(2);
    root->right = new Node(3);
    root->left->left = new Node(4);
    root->left->right = new Node(5);
    root->left->right->left = new Node(8);
    root->right->left = new Node(6);
    root->right->right = new Node(7);
    root->right->right->left = new Node(9);
    root->right->right->right = new Node(10);
    int Max = INT_MIN;
    int ans = maxPathSum (root);
    cout << ans;
    return 0;
}
